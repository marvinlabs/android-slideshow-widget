buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.dcendents:android-maven-plugin:1.0'
    }
}

apply plugin: 'android-library'
apply plugin: 'android-maven'
apply plugin: 'signing'

dependencies {
    compile project(':library')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.squareup.okhttp:okhttp:2.0.+'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.+'
    compile 'com.github.bumptech.glide:glide:3.6.1'
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode getAppVersionCode()
        versionName getAppVersionName()
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }
}

group = "com.marvinlabs"
version = getAppVersionName()

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    if (name.equals(com.android.builder.BuilderConstants.DEBUG)) {
        return; // Skip debug builds.
    }
    task("javadoc${variant.name.capitalize()}", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.plugin.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
    }

    task("bundleJavadoc${variant.name.capitalize()}", type: Jar) {
        description "Bundles Javadoc into zip for $variant.name."
        classifier = "javadoc"
        from tasks["javadoc${variant.name.capitalize()}"]
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java
}

task jar(type: Jar) {
    from 'build/classes/release'
}

task javadocJar(type: Jar, dependsOn: "javadocRelease") {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives jar
}

task wrapper(type: Wrapper) {
    description "Generates the gradle wrapper"
    gradleVersion = "1.10"
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: getSonatypeRepositoryUrl()) {
                authentication(userName: getSonatypeRepositoryUser(), password: getSonatypeRepositoryPassword())
            }

            pom.project {
                name 'Android SlideShow Widget - Picasso Plugin'
                artifactId 'android-slideshow-widget-picasso-plugin'
                packaging 'aar'
                description 'A plugin that helps integrate the Picasso library with the SlideShow widget library.'
                url 'https://github.com/marvinlabs/android-slideshow-widget'

                scm {
                    url 'scm:git@github.com:marvinlabs/android-slideshow-widget.git'
                    connection 'scm:git@github.com:marvinlabs/android-slideshow-widget.git'
                    developerConnection 'scm:git@github.com:marvinlabs/android-slideshow-widget.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'vpratfr'
                        name 'Vincent Mimoun-Prat'
                    }
                }
            }
        }
    }
}
